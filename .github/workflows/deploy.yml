name: Deploy Full Stack to EC2

on:
  push:
    branches:
      - deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      EC2_KEY: ${{ secrets.EC2_SSH_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      ################################################
      # FRONTEND
      ################################################
      - name: Install & build frontend
        run: |
          echo ">>> Building frontend..."
          cd frontend
          npm ci
          npm run build
          echo ">>> Build output listing (frontend/build):"
          ls -la build || true

      - name: Ensure frontend build exists
        run: |
          if [ ! -d "frontend/build" ] || [ -z "$(ls -A frontend/build 2>/dev/null)" ]; then
            echo "Error: frontend/build is missing or empty"
            exit 1
          fi
          echo "frontend build okay"

      - name: Deploy frontend to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "frontend/build/*"
          target: "/var/www/chai.karansuthar.works"
          overwrite: true
          strip_components: 0
          timeout: 60s

      ################################################
      # ADMIN
      ################################################
      - name: Install & build admin
        run: |
          echo ">>> Building admin..."
          cd admin
          npm ci
          npm run build
          echo ">>> Build output listing (admin/build):"
          ls -la build || true

      - name: Ensure admin build exists
        run: |
          if [ ! -d "admin/build" ] || [ -z "$(ls -A admin/build 2>/dev/null)" ]; then
            echo "Error: admin/build is missing or empty"
            exit 1
          fi
          echo "admin build okay"

      - name: Deploy admin to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "admin/build/*"
          target: "/var/www/admin.chai.karansuthar.works"
          overwrite: true
          strip_components: 0
          timeout: 60s

      ################################################
      # BACKEND
      ################################################
      - name: Deploy backend source to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "backend/*"
          target: "~/backend"
          overwrite: true
          strip_components: 0
          timeout: 120s

      - name: Install backend deps & restart services on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            echo ">>> Ensuring folders permissions..."
            sudo mkdir -p /var/www/chai.karansuthar.works
            sudo mkdir -p /var/www/admin.chai.karansuthar.works
            sudo chown -R $USER:$USER /var/www || true

            echo ">>> Backend: install deps"
            cd ~/backend || exit 1
            # install production deps
            npm ci --production

            echo ">>> Restarting backend with pm2"
            # replace server.js with your entrypoint if different
            pm2 restart chai-backend || pm2 start server.js --name chai-backend

            echo ">>> Restarting nginx"
            sudo systemctl restart nginx || sudo service nginx restart || true

      - name: Deployment finished
        run: echo "âœ… Deployment completed"
